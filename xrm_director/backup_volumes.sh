#!/bin/bash
# filepath: /home/user/ragflow/docker/backup_volumes.sh

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BACKUP_DIR="/home/dinar/backups"
DATE_FORMAT=$(date +%Y-%m-%d_%H-%M-%S)
PROJECT_NAME="xrm_dir"
COMPOSE_FILE="/opt/xrm-director/docker/docker-compose.yml"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–æ–≤, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
mkdir -p ${BACKUP_DIR}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_color() {
    COLOR=$1
    TEXT=$2
    case $COLOR in
        "red") echo -e "\033[0;31m${TEXT}\033[0m" ;;
        "green") echo -e "\033[0;32m${TEXT}\033[0m" ;;
        "yellow") echo -e "\033[0;33m${TEXT}\033[0m" ;;
        "blue") echo -e "\033[0;34m${TEXT}\033[0m" ;;
        *) echo "$TEXT" ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        print_color "red" "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        exit 1
    fi
}

# –°–ø–∏—Å–æ–∫ —Ç–æ–º–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
get_volumes() {
    echo "üîç –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–º–∞..."
    VOLUMES=(
      "docker_esdata01"
      "docker_mysql_data"
      "docker_minio_data"
      "docker_redis_data"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–º–∞ infinity_data
    if docker volume inspect docker_infinity_data &>/dev/null; then
        VOLUMES+=("docker_infinity_data")
    fi
    
    echo "üìã –ù–∞–π–¥–µ–Ω–æ —Ç–æ–º–æ–≤: ${#VOLUMES[@]}"
    for vol in "${VOLUMES[@]}"; do
        echo "  - $vol"
    done
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_containers() {
    print_color "yellow" "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    cd $(dirname ${COMPOSE_FILE})
    docker compose -f $(basename ${COMPOSE_FILE}) down
}

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
start_containers() {
    print_color "green" "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    cd $(dirname ${COMPOSE_FILE})
    docker compose -f $(basename ${COMPOSE_FILE}) up -d
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
create_backup() {
    print_color "blue" "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–º–æ–≤ ${PROJECT_NAME} (${DATE_FORMAT})"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    stop_containers
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–º–æ–≤
    get_volumes
    
    # –°—á–µ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω—ã—Ö –∞—Ä—Ö–∏–≤–∞—Ü–∏–π
    SUCCESS_COUNT=0
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –±—ç–∫–∞–ø–∞
    BACKUP_SUBDIR="${BACKUP_DIR}/${PROJECT_NAME}_${DATE_FORMAT}"
    mkdir -p ${BACKUP_SUBDIR}
    
    # –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–º
    for VOLUME in "${VOLUMES[@]}"; do
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–æ–º–∞ —á–µ—Ä–µ–∑ docker volume inspect
      if docker volume inspect ${VOLUME} &>/dev/null; then
        print_color "blue" "üìÅ –ê—Ä—Ö–∏–≤–∏—Ä—É—é —Ç–æ–º ${VOLUME}..."
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–æ–º–∞–º
        docker run --rm -v ${VOLUME}:/volume -v ${BACKUP_SUBDIR}:/backup alpine tar -czf /backup/${VOLUME}.tar.gz -C /volume ./
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏
        if [ $? -eq 0 ]; then
          print_color "green" "‚úÖ –¢–æ–º ${VOLUME} —É—Å–ø–µ—à–Ω–æ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω"
          SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
        else
          print_color "red" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ —Ç–æ–º–∞ ${VOLUME}"
        fi
      else
        print_color "yellow" "‚ö†Ô∏è –¢–æ–º ${VOLUME} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
      fi
    done
    
    # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—ç–∫–∞–ø–µ
    echo "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: $(date)" > ${BACKUP_SUBDIR}/backup_info.txt
    echo "–í–µ—Ä—Å–∏—è Docker: $(docker --version)" >> ${BACKUP_SUBDIR}/backup_info.txt
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:" >> ${BACKUP_SUBDIR}/backup_info.txt
    docker ps -a >> ${BACKUP_SUBDIR}/backup_info.txt
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å–Ω–æ–≤–∞
    start_containers
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∞—Ä—Ö–∏–≤–∞—Ö
    print_color "blue" "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –±—ç–∫–∞–ø–µ:"
    if [ $SUCCESS_COUNT -gt 0 ]; then
      ls -lh ${BACKUP_SUBDIR}/*.tar.gz 2>/dev/null
      print_color "green" "üéâ –£—Å–ø–µ—à–Ω–æ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–º–æ–≤: ${SUCCESS_COUNT} –∏–∑ ${#VOLUMES[@]}"
      print_color "green" "üìÇ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${BACKUP_SUBDIR}"
      
      # –°–æ–∑–¥–∞–µ–º –æ–±—â–∏–π –∞—Ä—Ö–∏–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞
      tar -czf "${BACKUP_DIR}/${PROJECT_NAME}_full_${DATE_FORMAT}.tar.gz" -C ${BACKUP_DIR} $(basename ${BACKUP_SUBDIR})
      print_color "green" "üì¶ –°–æ–∑–¥–∞–Ω –ø–æ–ª–Ω—ã–π –∞—Ä—Ö–∏–≤: ${BACKUP_DIR}/${PROJECT_NAME}_full_${DATE_FORMAT}.tar.gz"
    else
      print_color "red" "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞"
      rm -rf ${BACKUP_SUBDIR}
    fi
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤
list_backups() {
    print_color "blue" "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
    
    # –ò—â–µ–º –ø–æ–ª–Ω—ã–µ –∞—Ä—Ö–∏–≤—ã
    FULL_BACKUPS=($(find ${BACKUP_DIR} -maxdepth 1 -name "${PROJECT_NAME}_full_*.tar.gz" | sort -r))
    
    if [ ${#FULL_BACKUPS[@]} -eq 0 ]; then
        print_color "yellow" "‚ö†Ô∏è –ü–æ–ª–Ω—ã–µ –∞—Ä—Ö–∏–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    else
        echo "–ù–∞–π–¥–µ–Ω–æ ${#FULL_BACKUPS[@]} –∞—Ä—Ö–∏–≤–æ–≤:"
        for i in "${!FULL_BACKUPS[@]}"; do
            filename=$(basename "${FULL_BACKUPS[$i]}")
            size=$(du -h "${FULL_BACKUPS[$i]}" | cut -f1)
            date_created=$(date -r "${FULL_BACKUPS[$i]}" "+%Y-%m-%d %H:%M:%S")
            echo "[$i] ${filename} (${size}, —Å–æ–∑–¥–∞–Ω: ${date_created})"
        done
    fi
    
    # –ò—â–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –±—ç–∫–∞–ø–∞–º–∏
    DIR_BACKUPS=($(find ${BACKUP_DIR} -maxdepth 1 -type d -name "${PROJECT_NAME}_*" | sort -r))
    
    if [ ${#DIR_BACKUPS[@]} -gt 1 ]; then  # >1 –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–∞–º BACKUP_DIR —Ç–æ–∂–µ –±—É–¥–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
        print_color "blue" "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –±—ç–∫–∞–ø–∞–º–∏ —Ç–æ–º–æ–≤:"
        for i in "${!DIR_BACKUPS[@]}"; do
            if [ "${DIR_BACKUPS[$i]}" != "${BACKUP_DIR}" ]; then
                dirname=$(basename "${DIR_BACKUPS[$i]}")
                echo "[$i] ${dirname}"
            fi
        done
    fi
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞
restore_backup() {
    print_color "blue" "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã
    list_backups
    
    if [ ${#FULL_BACKUPS[@]} -eq 0 ]; then
        print_color "red" "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
        return 1
    fi
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä –±—ç–∫–∞–ø–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±—ç–∫–∞–ø–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–ª–∏ 'q' –¥–ª—è –æ—Ç–º–µ–Ω—ã: " backup_number
    
    if [ "$backup_number" == "q" ]; then
        print_color "yellow" "‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        return 0
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞
    if ! [[ "$backup_number" =~ ^[0-9]+$ ]] || [ $backup_number -ge ${#FULL_BACKUPS[@]} ]; then
        print_color "red" "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –±—ç–∫–∞–ø–∞"
        return 1
    fi
    
    # –í—ã–±—Ä–∞–Ω–Ω—ã–π –±—ç–∫–∞–ø
    selected_backup="${FULL_BACKUPS[$backup_number]}"
    backup_name=$(basename "$selected_backup" .tar.gz)
    
    print_color "yellow" "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞ –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–º–æ–≤."
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ '$backup_name'? (y/n): " confirm
    
    if [ "$confirm" != "y" ]; then
        print_color "yellow" "‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        return 0
    fi
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    stop_containers
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
    TEMP_DIR=$(mktemp -d)
    print_color "blue" "üìÇ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ${TEMP_DIR}"
    
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –∞—Ä—Ö–∏–≤
    tar -xzf "$selected_backup" -C "$TEMP_DIR"
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    UNPACKED_DIR=$(find "$TEMP_DIR" -maxdepth 1 -type d -name "${PROJECT_NAME}_*" | head -n 1)
    
    if [ -z "$UNPACKED_DIR" ]; then
        print_color "red" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ –∞—Ä—Ö–∏–≤–∞"
        start_containers
        rm -rf "$TEMP_DIR"
        return 1
    fi
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–º–∞
    SUCCESS_COUNT=0
    VOLUMES_TOTAL=0
    
    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ tar.gz —Ñ–∞–π–ª—ã –≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for archive in "$UNPACKED_DIR"/*.tar.gz; do
        if [ -f "$archive" ]; then
            VOLUMES_TOTAL=$((VOLUMES_TOTAL + 1))
            volume_name=$(basename "$archive" .tar.gz)
            print_color "blue" "üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–º $volume_name..."
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–æ–º–∞
            if ! docker volume inspect "$volume_name" &>/dev/null; then
                print_color "yellow" "‚ö†Ô∏è –¢–æ–º $volume_name –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º..."
                docker volume create "$volume_name" > /dev/null
            fi
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–º–∞
            docker run --rm -v "$volume_name":/volume -v "$UNPACKED_DIR":/backup alpine sh -c "rm -rf /volume/* && tar -xzf /backup/$(basename $archive) -C /volume"
            
            if [ $? -eq 0 ]; then
                print_color "green" "‚úÖ –¢–æ–º $volume_name —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
            else
                print_color "red" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–º–∞ $volume_name"
            fi
        fi
    done
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    rm -rf "$TEMP_DIR"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    start_containers
    
    if [ $SUCCESS_COUNT -gt 0 ]; then
        print_color "green" "üéâ –£—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–º–æ–≤: $SUCCESS_COUNT –∏–∑ $VOLUMES_TOTAL"
    else
        print_color "red" "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–º–∞"
    fi
}

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—ç–∫–∞–ø–∞–º–∏ (—É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö)
manage_backups() {
    print_color "blue" "üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∫–æ–ø–∏—è–º–∏"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã
    list_backups
    
    echo ""
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    echo "1. –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –±—ç–∫–∞–ø"
    echo "2. –û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N –±—ç–∫–∞–ø–æ–≤"
    echo "3. –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –±—ç–∫–∞–ø—ã"
    echo "4. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: " action
    
    case $action in
        1)
            if [ ${#FULL_BACKUPS[@]} -eq 0 ]; then
                print_color "red" "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
                return
            fi
            
            read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±—ç–∫–∞–ø–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: " backup_number
            if ! [[ "$backup_number" =~ ^[0-9]+$ ]] || [ $backup_number -ge ${#FULL_BACKUPS[@]} ]; then
                print_color "red" "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –±—ç–∫–∞–ø–∞"
            else
                selected_backup="${FULL_BACKUPS[$backup_number]}"
                backup_name=$(basename "$selected_backup")
                
                read -p "–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å '$backup_name'? (y/n): " confirm
                if [ "$confirm" == "y" ]; then
                    # –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤
                    rm -f "$selected_backup"
                    
                    # –£–¥–∞–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
                    backup_dir_name=$(basename "$selected_backup" .tar.gz)
                    if [ -d "${BACKUP_DIR}/${backup_dir_name}" ]; then
                        rm -rf "${BACKUP_DIR}/${backup_dir_name}"
                    fi
                    
                    print_color "green" "‚úÖ –ë—ç–∫–∞–ø '$backup_name' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
                fi
            fi
            ;;
        2)
            read -p "–°–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –±—ç–∫–∞–ø–æ–≤ –æ—Å—Ç–∞–≤–∏—Ç—å? " keep_count
            if ! [[ "$keep_count" =~ ^[0-9]+$ ]] || [ $keep_count -le 0 ]; then
                print_color "red" "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"
            else
                if [ ${#FULL_BACKUPS[@]} -le $keep_count ]; then
                    print_color "yellow" "‚ÑπÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±—ç–∫–∞–ø–æ–≤ (${#FULL_BACKUPS[@]}) –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ($keep_count)"
                else
                    to_delete=$((${#FULL_BACKUPS[@]} - keep_count))
                    read -p "–ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ $to_delete —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " confirm
                    if [ "$confirm" == "y" ]; then
                        for ((i=keep_count; i<${#FULL_BACKUPS[@]}; i++)); do
                            backup_to_delete="${FULL_BACKUPS[$i]}"
                            backup_name=$(basename "$backup_to_delete")
                            
                            # –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤
                            rm -f "$backup_to_delete"
                            
                            # –£–¥–∞–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
                            backup_dir_name=$(basename "$backup_to_delete" .tar.gz)
                            if [ -d "${BACKUP_DIR}/${backup_dir_name}" ]; then
                                rm -rf "${BACKUP_DIR}/${backup_dir_name}"
                            fi
                            
                            print_color "green" "‚úÖ –ë—ç–∫–∞–ø '$backup_name' —É–¥–∞–ª–µ–Ω"
                        done
                        print_color "green" "‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
                    fi
                fi
            fi
            ;;
        3)
            read -p "–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï –±—ç–∫–∞–ø—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ! (yes/n): " confirm
            if [ "$confirm" == "yes" ]; then
                rm -f ${BACKUP_DIR}/${PROJECT_NAME}_full_*.tar.gz
                rm -rf ${BACKUP_DIR}/${PROJECT_NAME}_20*
                print_color "green" "‚úÖ –í—Å–µ –±—ç–∫–∞–ø—ã —É–¥–∞–ª–µ–Ω—ã"
            else
                print_color "yellow" "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
            fi
            ;;
        4)
            return
            ;;
        *)
            print_color "red" "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä"
            ;;
    esac
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_menu() {
    clear
    echo "======================================================"
    print_color "blue" "     üõ†Ô∏è  –£—Ç–∏–ª–∏—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–º–∞–º–∏ RagFlow üõ†Ô∏è"
    echo "======================================================"
    echo ""
    echo "1. –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤—Å–µ—Ö —Ç–æ–º–æ–≤"
    echo "2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "3. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    echo "4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∫–æ–ø–∏—è–º–∏"
    echo "0. –í—ã—Ö–æ–¥"
    echo ""
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " choice
    
    case $choice in
        1)
            create_backup
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
            ;;
        2)
            list_backups
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
            ;;
        3)
            restore_backup
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
            ;;
        4)
            manage_backups
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
            ;;
        0)
            print_color "green" "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
            exit 0
            ;;
        *)
            print_color "red" "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä"
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
            ;;
    esac
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_docker
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    while true; do
        show_menu
    done
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main